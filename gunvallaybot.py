import discord
import asyncio
import re
import os
from discord.ext import commands
import math
from functools import reduce
from operator import mul
from fractions import Fraction
import datetime
import time
import random
import sys
import wikipedia

def inverse(f):
    return Fraction(f.denominator,f.numerator)

from decimal import Decimal

import logging

logging.basicConfig(level=logging.INFO)

token = os.environ.get('DISCORD_BOT_TOKEN')

intents = discord.Intents.default()
intents.members = True

client = discord.Client(intents = intents)

async def create_channel(message, channel_name):
    guild = message.guild
    overwrites = {guild.default_role: discord.PermissionOverwrite(read_messages=False), guild.me: discord.PermissionOverwrite(read_messages=True)}
    category_id = message.channel.category_id
    category = message.guild.get_channel(category_id)
    new_channel = await category.create_text_channel(name = channel_name, overwrites = overwrites)
    return new_channel

async def reply(message):
    reply = f'{message.author.mention}Âëº„Çì„Å†Ôºü'
    await message.channel.send(reply)
    
class Room():
    def __init__(self, hard = False):
        self.ans = ""
        if hard :
            for i in range(4):
                self.ans = self.ans + str(random.randrange(0, 10))
        else:
            l = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
            random.shuffle(l)
            for i in range(4):
                self.ans = self.ans + l[i]
        self.history = []  
    def step(selp, req):
        brow = 0 
        hit = 0
        for index, value in enumerate(req):
            if self.ans[index] == value:
                brow += 1
            elif self.ans.find(value) != -1:
                hit += 1
        return hit, brow
    
rooms = {0:"example"}
            
    
@client.event
async def on_ready():
    print('Ëµ∑Âãï„Åó„Åæ„Åó„Åü')

@client.event
async def on_message(message):
    if message.author.bot:
        return
    print(message.author.name + "<" + message.content)
    if '„ÄÇ' in message.content:
        return
    if '„ÅÑ„Å£„Å¶„Åç' in message.content:
        await message.channel.send('„ÅÑ„Å£„Å¶„ÇâÔºÅ‰ªäÊó•„ÇÇ„Åå„Çì„Å∞„Çåüëç')
    if 'ÂãâÂº∑' in message.content:
        await message.channel.send('ÂãâÂº∑„Åå„Çì„Å∞„Çåüëç')
    if '„Åä„ÅØ' in message.content:
        await message.channel.send('„Åä„ÅØÔºÅ‰ªäÊó•„ÇÇ‰∏ÄÊó•„Åå„Çì„Å∞„Çåüëç')
    if '„Åä„ÇÑ„Åô' in message.content:
        await message.channel.send('„Åä„ÅÜÔºÅ„Åä„ÇÑ„Åô„ÅøÔºÅÁù°Áú†„Åå„Çì„Å∞„Çåüëç')
    if  '„Åì„Çì„Å´„Å°„ÅØ' in message.content or message.content == '„Åì„Çì„Å°„ÇÉ' or message.content == '„Åì„Çì„Å°„ÇÉ„Åô' or message.content == '„Åì„Çì„Å°„ÇÉ„Åô„Éº' or message.content == 'Hi' or message.content == 'Hello':
        await message.channel.send('„Åì„Çì„Å°„ÇÉÔºÅÈ†ëÂºµ„Å£„Å¶„Çã„Åã„ÅÑÔºüÂøúÊè¥„Åô„Çã„ÅúÔºÅ„Åå„Çì„Å∞„Çåüëç')
    if message.content == '„Åì„Çì„Å∞„Çì„ÅØ' or message.content == '„Åì„Çì„Å∞„Çì„ÅØ„Éº':
        await message.channel.send('„Åì„Çì„Å∞„Çì„ÅØÔºÅ„Åæ„Å†‰ªäÊó•„ÅØÁµÇ„Çè„Å£„Å¶„Å™„ÅÑ„ÅûÔºÅ„Åå„Çì„Å∞„Çåüëç')
    if '„Åü„Å†„ÅÑ„Åæ' in message.content[0:4]: 
        await message.channel.send('„Åä„Åã„Åà„Çä„ÅÉÔºÅÈ†ëÂºµ„Çå„Åü„Åã„ÅÑÔºü')
    if '„Åå„Çì„Å∞' in message.content or 'È†ëÂºµ' in message.content:
        await message.channel.send('„Åä„ÅÜÔºÅ‰ø∫„ÇÇÂøúÊè¥„Åô„Çã„ÅúÔºÅ„Åå„Çì„Å∞„ÇåüëçÔºÅ')
    if message.content == '@„Åå„Çì„Å∞„ÇåÂêõ':
        await message.channel.send('„ÇìÔºü„Å©„Åó„ÅüÔºü')
    if message.content == '„Åå„Çì„Å∞„Å£„Åü' or message.content == '„Åå„Çì„Å∞„Å£„Åü„Çà':
        await message.channel.send('„Çà„ÅèÈ†ëÂºµ„Å£„ÅüÔºÅ‰ªäÂæå„ÇÇ„Åå„Çì„Å∞„Çåüëç')
    if '„Éè„Éè„ÉÉ' in message.content or 'ÔæäÔæäÔΩØ' in message.content or '„ÅØ„ÅØ„Å£' in message.content or '„ÅØ„Éè„ÉÉ' in message.content or '„ÅØ„Éè„Å£' in message.content or '„ÅØ„ÅØ„ÉÉ' in message.content or '„Éè„ÅØ„Å£' in message.content or '„Éè„ÅØ„ÉÉ' in message.content or '„Éè„Éè„Å£' in message.content:
        await message.channel.send('(„Éü„ÉÉ„Ç≠„Éº„Å†„Çà)')
    if '#p' in message.content:
        plus_list_str = message.content.split()
        plus_list_str.remove('#p')
        plus_list = map(float, plus_list_str)
        plus = sum(plus_list)
        await message.channel.send(plus)
    if '#m' in message.content:
        minus_list2_str = message.content.split()
        minus_list2_str.remove('#m')
        minus11 = float(minus_list2_str[0])
        minus1 = Decimal(minus11)
        minus_list2_str.remove(minus_list2_str[0])
        minus_list2 = map(float, minus_list2_str)
        minus_list = [i * -1 for i in minus_list2]
        minus22 = sum(minus_list)
        minus2 = Decimal(minus22)
        minus = minus1 + minus2
        await message.channel.send(minus)
    if '#t' in message.content:
        time_list_str = message.content.split()
        time_list_str.remove('#t')
        time_list = map(float, time_list_str)
        time = reduce(mul, time_list)
        await message.channel.send(time)
    if '#d' in message.content:
        divide_list_str = message.content.split()
        divide_list_str.remove('#d')
        divide11_str = divide_list_str[0]
        divide11 = float(divide11_str)
        divide1 = Decimal(divide11)
        divide_list = map(float, divide_list_str)
        divide22 = reduce(mul, divide_list)
        divide2 = Decimal(divide22)
        divide = (divide1 / divide2) * divide1
        await message.channel.send(divide)
    if '#o' in message.content:
        oio0, oio1_str, oio2_str = message.content.split( )
        oio1 = float(oio1_str)
        oio2 = float(oio2_str)
        oio = oio1 % oio2
        ii = oio1 // oio2
        iioio = f'{ii}„ÅÇ„Åæ„Çä{oio}'
        await message.channel.send(iioio)
    if '#s' in message.content:
        square0, square1_str, square2_str = message.content.split()
        square1 = float(square1_str)
        square2 = float(square2_str)
        square = square1 ** square2
        await message.channel.send(square)
    if '#r' in message.content:
        root0, root1_str = message.content.split()
        root1 = float(root1_str)
        root2 = math.sqrt(root1)
        root = f'‚àö{root1}, {root2}'
        await message.channel.send(root)
    if '‰ªä‰ΩïÊôÇ' in message.content:
        await message.channel.send(now)
    if '#help' in message.content:
        embed = discord.Embed(title = "„Åå„Çì„Å∞„ÇåÂêõ„ÅåÂä©„Åë„Å´Êù•„ÅüÔºÅ")
        embed.add_field(name = "ÂøúÁ≠î", value = "„Åü„Åæ„Å´Ë®ÄËëâ„ÅßÂèçÂøú„Åô„Çã„Å®„Åç„Åå„ÅÇ„Çã„ÇàÔºÅÔºà„Äå„ÄÇ„Äç„Çí‰Ωø„Åà„Å∞Èªô„Çâ„Åõ„Çâ„Çå„Çã„Çà„ÉºÔºâ", inline = False)
        embed.add_field(name = "#p x y", value = "Ë∂≥„ÅóÁÆó„Åß„Åç„Çã„ÇàÔºÅ3ÂÄã‰ª•‰∏ä„ÅÆÊï∞ÂÄ§„ÇÇ„Åß„Åç„Çã„ÇàÔºÅÔºà„Åì„ÅÆÂ†¥Âêà„ÅØx+y„Å´„Å™„Çã„Çà„ÉºÔºâ", inline = False)
        embed.add_field(name = "#m x y", value = "Âºï„ÅçÁÆó„Åß„Åç„Çã„ÇàÔºÅ3ÂÄã‰ª•‰∏ä„ÅÆÊï∞ÂÄ§„ÇÇ„Åß„Åç„Çã„ÇàÔºÅÔºà„Åì„ÅÆÂ†¥Âêà„ÅØx-y„Å´„Å™„Çã„Çà„ÉºÔºâ", inline = False)
        embed.add_field(name = "#t x y", value = "Êéõ„ÅëÁÆó„Åß„Åç„Çã„ÇàÔºÅ3ÂÄã‰ª•‰∏ä„ÅÆÊï∞ÂÄ§„ÇÇ„Åß„Åç„Çã„ÇàÔºÅÔºà„Åì„ÅÆÂ†¥Âêà„ÅØx√óy„Å´„Å™„Çã„Çà„ÉºÔºâ", inline = False)
        embed.add_field(name = "#d x y", value = "Ââ≤„ÇäÁÆó„Åß„Åç„Çã„ÇàÔºÅ3ÂÄã‰ª•‰∏ä„ÅÆÊï∞ÂÄ§„ÇÇ„Åß„Åç„Çã„ÇàÔºÅÔºà„Åì„ÅÆÂ†¥Âêà„ÅØx√∑y„Å´„Å™„Çã„Çà„ÉºÔºâ", inline = False)
        embed.add_field(name = "#o x y", value = "Ââ≤„ÇäÁÆó„ÅÇ„Åæ„Çä„Åß„Åç„Çã„ÇàÔºÅ", inline = False)
        embed.add_field(name = "#s x y", value = "Á¥Ø‰πó„Åß„Åç„Çã„ÇàÔºÅÔºà„Åì„ÅÆÂ†¥Âêà„ÅØx„ÅÆy‰πó„Å´„Å™„Çã„Çà„ÉºÔºâ", inline = False)
        embed.add_field(name = "#r x", value = "„É´„Éº„Éà„ÅÆÂÄ§Ê±Ç„ÇÅ„Å¶„Åè„Çå„Çã„ÇàÔºÅ", inline = False)
        embed.add_field(name = "#llt x y z", value = "„É´„Éº„É¨„ÉÉ„Éà„Åß„Åç„Çã„ÇàÔºÅÔºà„Åì„ÅÆÂ†¥Âêà„ÅØx,y,z,„ÅÆ„Å©„Çå„Åã„ÅåÂá∫„Çã„ÇàÔºÅ", inline = False)
        embed.add_field(name = "#ebr", value = "ÈØñÂÜÖ„ÅÆ„É°„É≥„Éê„ÉºÊï∞„ÄÅ‰∫∫Êï∞„ÄÅBOTÊï∞„Åå„Çè„Åã„Çã„ÇàÔºÅ", inline = False)
        embed.add_field(name = "#fjk", value = "„Åè„ÅÅw„Åõdrftgy„Åµ„Åò„Åìlp", inline = False)
        embed.add_field(name = "#wiki", value = "wiki„ÅßÊ§úÁ¥¢„Åó„Å¶„Åè„Çå„Çã„ÇàÔºÅ", inline = False)
        embed.add_field(name = "#wach x y", value = "wiki„Åßx„ÅÆÊ§úÁ¥¢ÂÄôË£ú„ÇíyÂÄãË°®Á§∫„Åó„Å¶„Åè„Çå„Çã„ÇàÔºÅ", inline = False)
        embed.add_field(name = "#hb", value = "„Éí„ÉÉ„Éà&„Éñ„É≠„Éº„Åå„Åß„Åç„Çã„ÇàÔºÅÔºàË©≥„Åó„ÅèÈÅä„Å≥Êñπ„Å´„Å¶ÔºÅÔºâ", inline = False)
        await message.channel.send(embed = embed)
    if '#llt' in message.content:
        rlt_list = message.content.split()
        rlt_list.remove('#llt')
        rlt_result = random.choice(rlt_list)
        await message.channel.send(rlt_result)
    if '#ebr' in message.content:
        guild = message.guild
        ebr_all = guild.member_count
        ebr_user = sum(1 for member in guild.members if not member.bot)
        ebr_bot = sum(1 for member in guild.members if member.bot)
        ebr = f'„É°„É≥„Éê„ÉºÊï∞:{ebr_all}„ÄÄ‰∫∫Êï∞:{ebr_user}„ÄÄbotÊï∞:{ebr_bot}'
        await message.channel.send(ebr)
    if '!d bump' in message.content:
        if message.content.startswith("!d bump"):
            if client.user!=message.author:
                def checks(m):
                    return m.channel == message.channel and m.author.id==302050872383242240
                bp=await client.wait_for('message', check=checks, timeout=15)
                msgid=bp.id
                embmsg=await message.channel.fetch_message(msgid)
                bumpdata="EmbedProxy(url='https://disboard.org/images/bot-command-image-bump.png', proxy_url='https://images-ext-1.discordapp.net/external/tAuRcs-FCy2M8OaTS9Ims62J1vrFiviahjBDtpZrrBs/https/disboard.org/images/bot-command-image-bump.png', width=800, height=200)"
                getdata=embmsg.embeds[0].image
                if str(bumpdata)==str(getdata):
                    await asyncio.sleep(7200)
                    embed = discord.Embed(title="BUMP„Åß„Åç„Çã„ÇàÔºÅ",description="BUMP„Åå„Çì„Å∞„ÇåüëçÔºÅ",color=0x24B8B8)
                    await message.channel.send(embed=embed)
                    print("send:bump!!!")
    if message.content.startswith('#ebons'):
        guild = message.guild
        ebr_all = guild.member_count
        ebr_user = sum(1 for member in guild.members if not member.bot)
        ebr_bot = sum(1 for member in guild.members if member.bot)
        ebr_alls = f'„É°„É≥„Éê„ÉºÊï∞Ôºö{ebr_all}'
        ebr_users = f'‰∫∫Êï∞Ôºö{ebr_user}'
        ebr_bots = f'botÊï∞Ôºö{ebr_bot}'
        new_channel = await create_channel(message, channel_name = ebr_alls)
        new_channel = await create_channel(message, channel_name = ebr_users)
        new_channel = await create_channel(message, channel_name = ebr_bots)
    if '#fjk' in message.content:
        await message.channel.send('„Åè„ÅÅw„Åõdrftgy„Åµ„Åò„Åìlp')
    if client.user in message.mentions:
        await reply(message)
    if '#wiki'in message.content:
        wiki0, wiki1 = message.content.split()
        wikipedia.set_lang('ja')
        try:
            page_title = wikipedia.page(wiki1)
            embed = discord.Embed(title = wiki1, url = f'https://ja.wikipedia.org/wiki/{wiki1}')
            page_summary = wikipedia.summary(wiki1)
            embed.add_field(name = page_title, value = page_summary, inline = False)
            await message.channel.send(embed = embed)
        except wikipedia.exceptions.DisambiguationError:
            page_search = wikipedia.search(wiki1, results = 11)
            page_search_url = f'https://ja.wikipedia.org/wiki/{page_search}'
            embed = discord.Embed()
            for page in page_search:
                page_int = page_search.index(page)
                page_url = f'https://ja.wikipedia.org/wiki/{page}'
                embed.add_field(name = page, value = f'„Äå{page}„Äç„ÅßÂÜçÊ§úÁ¥¢', inline = False)
            await message.channel.send(embed = embed)
    if '#wach' in message.content:
        wiki0, wiki1, wiki2 = message.content.split()
        wikipedia.set_lang('ja')
        wiki22 = int(wiki2) + 1
        page_ach = wikipedia.search(wiki1, results = wiki22)
        page_search_url = f'https://ja.wikipedia.org/wiki/{page_ach}'
        embed = discord.Embed()
        for pages in page_ach:
            pages_int = page_ach.index(pages)
            pages_url = f'https://ja.wikipedia.org/wiki/{pages}'
            embed.add_field(name = pages, value = f'„Äå{pages}„Äç„ÅßÂÜçÊ§úÁ¥¢', inline = False)
        await message.channel.send(embed = embed)
    if message.content == "#hb":
        embed = discord.Embed(title = 'Hit&Brow„ÅÆÈÅä„Å≥Êñπ', description = 'Áõ∏Êâã„ÅÆÊÄù„Å£„Å¶„ÅÑ„ÇãÊï∞Â≠ó„ÇíÊé®ÁêÜ„Åó„Å¶ÂΩì„Å¶„Çã„Ç≤„Éº„É†„Å†„ÇàÔºÅ\nÊï∞Â≠ó„Å®Â†¥ÊâÄ„Åå„ÅÇ„Å£„Å¶„Åü„Çâ„ÄåHit„Äç„ÄÅ\nÊï∞Â≠ó„Åå„ÅÇ„Å£„Å¶„ÅÑ„Å¶„ÇÇÂ†¥ÊâÄ„ÅåÈÅï„Å£„Å¶„ÅÑ„Åü„Çâ„ÄåBrow„Äç„Åß„Ç´„Ç¶„É≥„Éà„Åô„Çã„ÇàÔºÅ\nÊúÄÁµÇÁöÑ„Å´3Hit„Å´„Åô„Çå„Å∞Âãù„Å°„Å†„ÇàÔºÅ')
        embed.add_field(name = '#hs', value = '„Ç≤„Éº„É†„ÇíÂßã„ÇÅ„Çã„ÇàÔºÅ', inline = False)
        embed.add_field(name = '#hc', value = '„ÅÇ„Å£„Å¶„Çã„ÅãÁ¢∫Ë™ç„Åô„Çã„ÇàÔºÅ', inline = False)
        embed.add_field(name = '#hd', value = '„Å©„ÅÜ„Åó„Å¶„ÇÇ„Çè„Åã„Çâ„Å™„ÅÑ„Å®„Åç„Å´‰Ωø„Å£„Å¶„Å≠ÔºÅÔºàÁ≠î„Åà„ÅåÂá∫„Çã„ÇàÔºâ', inline = False)
        await message.channel.send(embed = embed)
    if message.content == '#hs':
        if message.channel.id in rooms:
            await message.channel.send('‰ΩøÁî®‰∏≠„Å™„ÅÜ')
            return
        rooms[message.channel.id] = Room()
        await message.channel.send('„Çπ„Çø„Éº„ÉàÔºÅ')    
    if(message.content[0:3]=="#hc") and message.channel.id in rooms:
        req=message.content[3:]
        req=req.replace(" ","")
        if len(req)!=4:
            await message.channel.send('ÔºîÊ°Å„ÅÆÁï™Âè∑„Å†„ÇàÔºÅ')
            return
        hit, brow = rooms[message.channel.id].step(req)
        rooms[message.channel.id].history.append({'request':req, 'hit':hit, 'brow':brow})
        await message.channel.send('„É™„ÇØ„Ç®„Çπ„ÉàÔºö'+ req + '\nÁµêÊûúÔºö{}„Éí„ÉÉ„Éà {}„Éñ„É≠„Éº'.format(hit, brow))
        if req == rooms[message.channel.id].ans:
            await message.channel.send('Ê≠£Ëß£ÔºÅ')
            say = '‰ªä„Åæ„Åß„ÅÆË®òÈå≤„Å†„ÇàÔºÅ\nË≥™ÂïèÂõûÊï∞Ôºö{}Âõû| Êï∞Â≠ó | „Éí„ÉÉ„Éà | „Éñ„É≠„Éº |\n'.format(len(rooms[message.channel.id].history))
            for i in rooms[message.channel.id].history:
                say = say + '| {} |  {}  |  {}  |\n'.format(i['request'],i['hit'],i['brow'])
            await message.channel.send(say)
            del rooms[message.chanenl.id]
    if message.content == '#hd' and message.channel.id in rooms:
        await message.channel.send('„Ç≤„Éº„É†ÁµÇ‰∫ÜÔºÅÁ≠î„ÅàÔºö' + rooms[message.channel.id].ans)
        del rooms[message.channel.id]
    if message.content == '#hy' and message.channel.id in rooms:
        say = '‰ªä„Åæ„Åß„ÅÆË®òÈå≤„Å†„ÇàÔºÅ\nË≥™ÂïèÂõûÊï∞Ôºö{}Âõû| Êï∞Â≠ó | „Éí„ÉÉ„Éà |  „Éñ„É≠„Éº |\n'.format(len(rooms[message.channel.id].history))
        for i in rooms[message.channel.id].history:
            say = say + | {} |  {}  |  {}  |\n'.format(i['request'], i['hit'], i['brow'])
        await message.channel.send(say)


        


                                   
                                   
        
        
                            
                            
                        
                                                                                             
                                               
            


                                               
        
            
            
                                             
                                             
        
       
                   

client.run(token)
